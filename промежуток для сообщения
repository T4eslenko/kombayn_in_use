from datetime import datetime
from typing import Optional
from openpyxl import Workbook

def remove_timezone(dt: datetime) -> Optional[datetime]:
    # Удаление информации о часовом поясе из объекта datetime
    if dt is None:
        return None
    if dt.tzinfo:
        dt = dt.astimezone().replace(tzinfo=None)
    return dt

def get_message_info(message):
    # Получение информации о сообщении
    if message is None:
        return None, None, None, None, None, None, None, None, None
    user_id = message.sender_id if isinstance(message.sender, User) else None
    username = message.sender.username if isinstance(message.sender, User) else None
    first_name = message.sender.first_name if isinstance(message.sender, User) else None
    last_name = message.sender.last_name if isinstance(message.sender, User) else None
    date = message.date
    media = message.media if message.media else None
    text = message.text
    fwd_user_id = message.fwd_from.from_id.user_id if isinstance(message.fwd_from, MessageFwdHeader) else None
    fwd_date = message.fwd_from.date if isinstance(message.fwd_from, MessageFwdHeader) else None

    return user_id, username, first_name, last_name, date, text, media, fwd_user_id, fwd_date

def get_messages_and_save_xcls(client, index: int, id_: bool, name: bool, group_title, userid, userinfo):
    wb = Workbook()
    ws = wb.active
    ws.cell(row=1, column=1, value=userinfo)
    ws.cell(row=2, column=1, value=group_title)
    ws.append(['ID объекта', 'Group ID', 'Message ID', 'Date and Time', 'User ID', '@Username', 'First Name', 'Last Name', 'Message', 'Media', 'Reply to Message', 'Reply to User ID', '@Reply Username', 'Reply First Name', 'Reply Last Name', 'Reply Message ID', 'Reply Date and Time', 'fwd_user_id', 'fwd_date'])
    participants_from_messages = set()
    
    for message in client.iter_messages(group_title):
        print(message)
        input()
        # Проверяем, что message является экземпляром Message
        if not isinstance(message, Message):
            continue
        # Основная информация о сообщении
        user_id, username, first_name, last_name, date, text, media, fwd_user_id, fwd_date = get_message_info(message)
        if date is None:
            continue
        row_data = [
            userid,
            message.chat_id,
            message.id,
            remove_timezone(date),
            user_id,
            f"@{username}" if username else None,
            first_name,
            last_name,
            text,
            media
        ]
        participants_from_messages.add(user_id)

        # Если сообщение является ответом на другое сообщение
        if isinstance(message.reply_to_msg_id, int):
            reply_msg_id = message.reply_to_msg_id
            reply_user_id, reply_username, reply_first_name, reply_last_name, reply_date, reply_text, reply_media, fwd_user_id, fwd_date = get_message_info(client.get_messages(group_title, ids=[reply_msg_id])[0])
            if reply_date is None:
                continue
            row_data.extend([
                reply_text,
                reply_user_id,
                f"@{reply_username}" if reply_username else None,
                reply_first_name,
                reply_last_name,
                reply_msg_id,
                remove_timezone(reply_date)
            ])
            participants_from_messages.add(reply_user_id)
        else:
            row_data.extend([None] * 7)
            
        if isinstance(message.fwd_from, MessageFwdHeader):
            row_data.extend([
                fwd_user_id,
                remove_timezone(fwd_date)
            ])
        ws.append(row_data)
